<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblErrorMessage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        xgAAAMYBsHSbxQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEGSURBVDhPpVPL
        EYIwEI012IOVeJLNgQuhBI92oG1QgmfGKqyCwFgCw3iJ+5aPAQI6engzydu3j/0E5ZwboTKHXZHSpTSU
        20Q/AJzBITbVvy9KbQoTnayhmtFYo++l0RmAc8tRDQ20YwNJphsLnE2jaxXH28G4AzjEoIG2N5Fg92Vn
        Ezr6SYXRBPgcNK0JV8J36Rmlwd0XitjoJzDj20pq5CoMhy9NqGypijHlpR3OKRM6K5k2D2kqApYMgHbI
        lHNPWJPOwqJlA9kO534wCM8AGAzWWghtocfQwtoQiyTaA1N+NMTVNXKJwIz31whi8SEFKpg9JAn8+5QF
        YvLrz+QBfX3/Ozv1Argih1/2g+6iAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jUIlxv8HM4QpdM1s3h8AAAAASUVORK5CYII=
</value>
  </data>
</root>